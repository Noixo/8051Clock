C51 COMPILER V9.56.0.0   DHT11                                                             08/12/2017 01:24:57 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE DHT11
OBJECT MODULE PLACED IN .\Objects\DHT11.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE DHT11.c ROM(SMALL) OPTIMIZE(9,SIZE) BROWSE DEBUG OBJECTEXTEND CODE TABS(
                    -2) OBJECT(.\Objects\DHT11.obj)

line level    source

   1          #include "DHT11.h"
   2          #include "timing.h"
   3          #include "LCD.h"
   4          
   5          void readDHT11()
   6          {
   7   1        unsigned char i, MAXTIMING;
   8   1        unsigned char count;
   9   1        unsigned char store[5] = {0x2, 0xFF, 2, 3, 4};
  10   1        
  11   1        
  12   1        store[0] = int_to_ascii(store[0]);
  13   1        write_char(store[0]);
  14   1        
  15   1        store[1] = int_to_ascii(store[1]);
  16   1        write_char(store[1]);
  17   1          //write_char('\n');
  18   1        write_char(store[2]);
  19   1        
  20   1        return;
  21   1        
  22   1        //write_string(store);
  23   1        //store = {'50','25'};
  24   1        //return; //store;
  25   1        
  26   1        ms_delay(500);  //1 second delay for device to re-test.
  27   1        
  28   1        DHT11 = 0;
  29   1        ms_delay(18); //delay 18ms
  30   1        DHT11 = 1;
  31   1        
  32   1        us_delay(20); //Let DHT11 know that pin was pulled high before setting to input.
  33   1        
  34   1        DHT11 = 0;
  35   1        
  36   1        for(i = 0; i < 2; i++)  //Check for when DHT11 is LOW, confirmation signal.
  37   1        {
  38   2          while(DHT11 == 0)
  39   2          {
  40   3            MAXTIMING++;
  41   3            if(MAXTIMING > 128)
  42   3              break;
  43   3            us_delay(30);
  44   3          }
  45   2          us_delay(90);
  46   2        }
  47   1        MAXTIMING = 0;
  48   1        
  49   1        for(i = 0; i < 40; i++)
  50   1        {
  51   2          while(DHT11 == 0) //Loop to skip when pin is pulled low.
  52   2          {
  53   3            MAXTIMING++;
  54   3            if(MAXTIMING > 128)
C51 COMPILER V9.56.0.0   DHT11                                                             08/12/2017 01:24:57 PAGE 2   

  55   3              break;
  56   3            us_delay(1);
  57   3          }
  58   2          
  59   2          MAXTIMING = 0;
  60   2          
  61   2          while(DHT11 == 1) //Count number of microseconds pin is high. If 70 microseconds
  62   2          {                 //bit is 1, lower is 0.
  63   3            count++;
  64   3            
  65   3            MAXTIMING++;
  66   3            if(MAXTIMING > 128)
  67   3              break;
  68   3            us_delay(1);
  69   3          }
  70   2          
  71   2          
  72   2          if(count > 40)
  73   2          {
  74   3            store[i/8] <<= 1; //Since integer division rounds down. Can split 40 data into 5 8-bit segments.
  75   3          }
  76   2          else
  77   2          {
  78   3            store[i/8] |= 1;
  79   3          }
  80   2          count = 0;
  81   2        }
  82   1        
  83   1        if(validate(store) == 1)
  84   1        {
  85   2          store[0] = int_to_ascii(store[0]);
  86   2          write_char(store[0]);
  87   2          //write_char('\n');
  88   2          write_char(store[2]);
  89   2        }
  90   1        else
  91   1        {
  92   2          //idk, redo?-*
  93   2        }
  94   1      }
  95          
  96          char validate(char store[])
  97          {
  98   1        if((store[0] + store[2]) != store[4])
  99   1          return -1;
 100   1        else
 101   1          return 1;
 102   1      }
*** WARNING C294 IN LINE 26 OF DHT11.c: unreachable code
C51 COMPILER V9.56.0.0   DHT11                                                             08/12/2017 01:24:57 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION readDHT11 (BEGIN)
                                           ; SOURCE LINE # 5
                                           ; SOURCE LINE # 6
                                           ; SOURCE LINE # 9
0000 7800        R     MOV     R0,#LOW store
0002 7C00        R     MOV     R4,#HIGH store
0004 7D00              MOV     R5,#00H
0006 7BFF              MOV     R3,#0FFH
0008 7A00        R     MOV     R2,#HIGH _?ix1000
000A 7900        R     MOV     R1,#LOW _?ix1000
000C 7E00              MOV     R6,#00H
000E 7F05              MOV     R7,#05H
0010 1100        E     ACALL   ?C?COPY
                                           ; SOURCE LINE # 12
0012 AF00        R     MOV     R7,store
0014 1100        E     ACALL   _int_to_ascii
0016 8F00        R     MOV     store,R7
                                           ; SOURCE LINE # 13
0018 1100        E     ACALL   _write_char
                                           ; SOURCE LINE # 15
001A AF00        R     MOV     R7,store+01H
001C 1100        E     ACALL   _int_to_ascii
001E 8F00        R     MOV     store+01H,R7
                                           ; SOURCE LINE # 16
                                           ; SOURCE LINE # 18
0020 8000              SJMP    ?C0025
                                           ; SOURCE LINE # 26
                                           ; SOURCE LINE # 28
                                           ; SOURCE LINE # 29
                                           ; SOURCE LINE # 30
                                           ; SOURCE LINE # 32
                                           ; SOURCE LINE # 34
                                           ; SOURCE LINE # 36
                                           ; SOURCE LINE # 37
                                           ; SOURCE LINE # 39
                                           ; SOURCE LINE # 40
                                           ; SOURCE LINE # 42
                                           ; SOURCE LINE # 52
                                           ; SOURCE LINE # 53
                                           ; SOURCE LINE # 55
                                           ; SOURCE LINE # 62
                                           ; SOURCE LINE # 63
                                           ; SOURCE LINE # 67
                                           ; SOURCE LINE # 73
                                           ; SOURCE LINE # 74
                                           ; SOURCE LINE # 84
                                           ; SOURCE LINE # 85
0022         ?C0025:
0022 1100        E     ACALL   _write_char
                                           ; SOURCE LINE # 88
0024 AF00        R     MOV     R7,store+02H
0026 1100        E     ACALL   _write_char
                                           ; SOURCE LINE # 89
                                           ; SOURCE LINE # 91
                                           ; SOURCE LINE # 93
                                           ; SOURCE LINE # 94
0028         ?C0001:
0028 22                RET     
             ; FUNCTION readDHT11 (END)
C51 COMPILER V9.56.0.0   DHT11                                                             08/12/2017 01:24:57 PAGE 4   


             ; FUNCTION _validate (BEGIN)
                                           ; SOURCE LINE # 96
;---- Variable 'store' assigned to Register 'R1/R2/R3' ----
                                           ; SOURCE LINE # 97
                                           ; SOURCE LINE # 98
0000 900002            MOV     DPTR,#02H
0003 1100        E     ACALL   ?C?CLDOPTR
0005 FF                MOV     R7,A
0006 33                RLC     A
0007 95E0              SUBB    A,ACC
0009 FE                MOV     R6,A
000A 1100        E     ACALL   ?C?CLDPTR
000C FD                MOV     R5,A
000D 33                RLC     A
000E 95E0              SUBB    A,ACC
0010 FC                MOV     R4,A
0011 ED                MOV     A,R5
0012 2F                ADD     A,R7
0013 FF                MOV     R7,A
0014 EC                MOV     A,R4
0015 3E                ADDC    A,R6
0016 FE                MOV     R6,A
0017 900004            MOV     DPTR,#04H
001A 1100        E     ACALL   ?C?CLDOPTR
001C FD                MOV     R5,A
001D 33                RLC     A
001E 95E0              SUBB    A,ACC
0020 FC                MOV     R4,A
0021 EF                MOV     A,R7
0022 6D                XRL     A,R5
0023 7002              JNZ     ?C0024
0025 EE                MOV     A,R6
0026 6C                XRL     A,R4
0027         ?C0024:
0027 6003              JZ      ?C0021
                                           ; SOURCE LINE # 99
0029 7FFF              MOV     R7,#0FFH
002B 22                RET     
002C         ?C0021:
                                           ; SOURCE LINE # 101
002C 7F01              MOV     R7,#01H
                                           ; SOURCE LINE # 102
002E         ?C0022:
002E 22                RET     
             ; FUNCTION _validate (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     88    ----
   CONSTANT SIZE    =      5    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
