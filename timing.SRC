; timing.SRC generated from: timing.c
; COMPILER INVOKED BY:
;        C:\Keil_v5\C51\BIN\C51.EXE timing.c ROM(SMALL) OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2) OBJECT(.\Objects\timing.obj)

$NOMOD51

NAME	TIMING

TMOD	DATA	089H
TF0	BIT	088H.5
TH0	DATA	08CH
TL0	DATA	08AH
TR0	BIT	088H.4
?PR?_ms_delay?TIMING SEGMENT CODE INBLOCK 
?PR?_us_delay?TIMING SEGMENT CODE INBLOCK 
	PUBLIC	_us_delay
	PUBLIC	_ms_delay
; #pragma src
; #include "timing.h"
; 
; void ms_delay(unsigned char num)	//1 miliseconds

	RSEG  ?PR?_ms_delay?TIMING
_ms_delay:
	USING	0
			; SOURCE LINE # 4
;---- Variable 'num?040' assigned to Register 'R7' ----
; {
			; SOURCE LINE # 5
; 	unsigned char i;
; 	TMOD = 0x01;	//TMOD becomes mode: 1 (16 bit timer)
			; SOURCE LINE # 7
	MOV  	TMOD,#01H
; 	
; 	// Time is 1/(crystal(mhz)/12(prescaler)) = x uS
; 	//Time needed is 65536-x = value for TH & TL
; 
; 	for(i = 0; i < num; i++)
			; SOURCE LINE # 12
;---- Variable 'i?041' assigned to Register 'R6' ----
	CLR  	A
	MOV  	R6,A
?C0001:
	MOV  	A,R6
	CLR  	C
	SUBB 	A,R7
	JNC  	?C0002
; 	{
			; SOURCE LINE # 13
; 		TH0 = 0xFC;	//Upper 8 bits
			; SOURCE LINE # 14
	MOV  	TH0,#0FCH
; 		TL0 = 0x17;	//Lower 8 bits
			; SOURCE LINE # 15
	MOV  	TL0,#017H
; 		TR0 = 1;           	//Starts the timer
			; SOURCE LINE # 16
	SETB 	TR0
?C0004:
; 
; 		while(TF0 == 0);		//loops till timer overflow bit = 1
			; SOURCE LINE # 18
	JNB  	TF0,?C0004
?C0005:
; 		TF0 = 0;           	//clear the timer Over flow flag
			; SOURCE LINE # 19
	CLR  	TF0
; 	}
			; SOURCE LINE # 20
	INC  	R6
	SJMP 	?C0001
?C0002:
; 	TR0 = 0;						//Turns off the timer
			; SOURCE LINE # 21
	CLR  	TR0
; }
			; SOURCE LINE # 22
	RET  	
; END OF _ms_delay

; 
; void us_delay(unsigned char num)	//10 microsecond

	RSEG  ?PR?_us_delay?TIMING
_us_delay:
	USING	0
			; SOURCE LINE # 24
;---- Variable 'num?142' assigned to Register 'R7' ----
; {
			; SOURCE LINE # 25
; 	unsigned char i;
; 	
; 	for(i = 0; i < num; i++);
			; SOURCE LINE # 28
;---- Variable 'i?143' assigned to Register 'R6' ----
	CLR  	A
	MOV  	R6,A
?C0007:
	MOV  	A,R6
	CLR  	C
	SUBB 	A,R7
	JNC  	?C0010
	INC  	R6
	SJMP 	?C0007
; 	//TMOD = 0x01; //TMOD = 0x00;	//TMOD becomes mode: 0 (8 bit timer)
; 	
; 	//for(i = 0; i < num; i++)
; 	//{
; 		//TH0 = 0xFF;	// Upper 8 bits
; 		//TL0 = 0xAF;	//Lower 8 bits
; 		//TR0 = 1;		//Starts the timer
; 
; 		//while(TF0 == 0);
; 		//TF0 = 0;		//Clears overflow tag
; 	//}
; 	//TR0 = 0;		//Turns off timer
; }			; SOURCE LINE # 41
?C0010:
	RET  	
; END OF _us_delay

	END
