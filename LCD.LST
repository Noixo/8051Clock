C51 COMPILER V9.56.0.0   LCD                                                               08/12/2017 01:24:57 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\Objects\LCD.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE LCD.c ROM(SMALL) OPTIMIZE(9,SIZE) BROWSE DEBUG OBJECTEXTEND CODE TABS(2)
                    - OBJECT(.\Objects\LCD.obj)

line level    source

   1          #include "LCD.h"
   2          #include "timing.h"
   3          
   4          //current_line = 0;
   5          
   6          void init()
   7          {
   8   1        //RS = 0; //command
   9   1        ms_delay(15);
  10   1        
  11   1        cmd(0x38);  //Function set (8 bit, 2 line, 5x7)
  12   1        ms_delay(5);
  13   1      
  14   1        cmd(0x06);  //Entry mode (Left to right, inc)
  15   1      
  16   1        cmd(0x0F);  //display (Display on, cursor blinking)
  17   1      
  18   1        cmd(CLEAR);
  19   1      }
  20          
  21          void cmd(char cmd)
  22          {
  23   1        RS = 0;
  24   1        write_byte = cmd;
  25   1        E = 0;
  26   1        us_delay(100);
  27   1        E = 1;
  28   1      }
  29          
  30          void write_char(char letter)
  31          {
  32   1        RS = 1; //word;
  33   1        write_byte = letter;
  34   1        E = 0;
  35   1        us_delay(100);
  36   1        E = 1;
  37   1      }
  38          
  39          void backlight_toggle()
  40          {
  41   1        backlight = ~backlight;
  42   1      } 
  43          
  44          void write_string(char *string)//[])
  45          {
  46   1        char i = 0;
  47   1        
  48   1        //RS = 1; //ensure we are writing string
  49   1        for(i = 0; string[i] != '\0'; i++)
  50   1        {
  51   2          if(string[i] == '\n')//0x5C 0x6E) // 0x5c is '\', 0x6E is 'n'
  52   2          {
  53   3            new_line();
  54   3          }
C51 COMPILER V9.56.0.0   LCD                                                               08/12/2017 01:24:57 PAGE 2   

  55   2          else
  56   2          {
  57   3            write_char(string[i]);
  58   3          }
  59   2        }
  60   1      }
  61          
  62          
  63          void new_line()
  64          {
  65   1        if(!current_line)
  66   1        {
  67   2          cmd(0xC0);//^ 0xC0);
  68   2          //cmd(0xC0);
  69   2        }
  70   1        else
  71   1        {
  72   2          cmd(0x80);
  73   2        }
  74   1        current_line = ~current_line;
  75   1      }
  76          
  77          char int_to_ascii(unsigned char integer)
  78          {
  79   1        unsigned char i;
  80   1        for (i = 0; integer != '\0'; i++)
  81   1        
  82   1        return integer + '0';
  83   1      }
*** WARNING C291 IN LINE 83 OF LCD.c: not every exit path returns a value
C51 COMPILER V9.56.0.0   LCD                                                               08/12/2017 01:24:57 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Com0012 (BEGIN)
0000         L?0019:
0000 AB00        R     MOV     R3,string
0002 AA00        R     MOV     R2,string+01H
0004 A900        R     MOV     R1,string+02H
0006 AF00        R     MOV     R7,i
0008 EF                MOV     A,R7
0009 33                RLC     A
000A 95E0              SUBB    A,ACC
000C 8F82              MOV     DPL,R7
000E F583              MOV     DPH,A
0010 1100        E     ACALL   ?C?CLDOPTR
0012 FF                MOV     R7,A
0013 22                RET     
             ; FUNCTION Com0012 (END)

             ; FUNCTION init (BEGIN)
                                           ; SOURCE LINE # 6
                                           ; SOURCE LINE # 7
                                           ; SOURCE LINE # 9
0000 7F0F              MOV     R7,#0FH
0002 7E00              MOV     R6,#00H
0004 1100        E     ACALL   _ms_delay
                                           ; SOURCE LINE # 11
0006 7F38              MOV     R7,#038H
0008 1100        R     ACALL   _cmd
                                           ; SOURCE LINE # 12
000A 7F05              MOV     R7,#05H
000C 7E00              MOV     R6,#00H
000E 1100        E     ACALL   _ms_delay
                                           ; SOURCE LINE # 14
0010 7F06              MOV     R7,#06H
0012 1100        R     ACALL   _cmd
                                           ; SOURCE LINE # 16
0014 7F0F              MOV     R7,#0FH
0016 1100        R     ACALL   _cmd
                                           ; SOURCE LINE # 18
0018 AF00        R     MOV     R7,CLEAR
001A 0100        R     AJMP    _cmd
             ; FUNCTION init (END)

             ; FUNCTION _cmd (BEGIN)
                                           ; SOURCE LINE # 21
;---- Variable 'cmd' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 22
                                           ; SOURCE LINE # 23
0000 C280              CLR     RS
                                           ; SOURCE LINE # 24
0002 8FA0              MOV     write_byte,R7
                                           ; SOURCE LINE # 25
0004 C281              CLR     E
                                           ; SOURCE LINE # 26
0006 7F64              MOV     R7,#064H
0008 7E00              MOV     R6,#00H
000A 1100        E     ACALL   _us_delay
                                           ; SOURCE LINE # 27
000C D281              SETB    E
                                           ; SOURCE LINE # 28
000E 22                RET     
C51 COMPILER V9.56.0.0   LCD                                                               08/12/2017 01:24:57 PAGE 4   

             ; FUNCTION _cmd (END)

             ; FUNCTION _write_char (BEGIN)
                                           ; SOURCE LINE # 30
;---- Variable 'letter' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 31
                                           ; SOURCE LINE # 32
0000 D280              SETB    RS
                                           ; SOURCE LINE # 33
0002 8FA0              MOV     write_byte,R7
                                           ; SOURCE LINE # 34
0004 C281              CLR     E
                                           ; SOURCE LINE # 35
0006 7F64              MOV     R7,#064H
0008 7E00              MOV     R6,#00H
000A 1100        E     ACALL   _us_delay
                                           ; SOURCE LINE # 36
000C D281              SETB    E
                                           ; SOURCE LINE # 37
000E 22                RET     
             ; FUNCTION _write_char (END)

             ; FUNCTION backlight_toggle (BEGIN)
                                           ; SOURCE LINE # 39
                                           ; SOURCE LINE # 40
                                           ; SOURCE LINE # 41
0000 B290              CPL     backlight
                                           ; SOURCE LINE # 42
0002 22                RET     
             ; FUNCTION backlight_toggle (END)

             ; FUNCTION _write_string (BEGIN)
                                           ; SOURCE LINE # 44
0000 8B00        R     MOV     string,R3
0002 8A00        R     MOV     string+01H,R2
0004 8900        R     MOV     string+02H,R1
                                           ; SOURCE LINE # 45
                                           ; SOURCE LINE # 46
0006 E4                CLR     A
0007 F500        R     MOV     i,A
                                           ; SOURCE LINE # 49
0009 F500        R     MOV     i,A
000B         ?C0005:
000B 1100        R     ACALL   L?0019
000D 600F              JZ      ?C0010
                                           ; SOURCE LINE # 50
                                           ; SOURCE LINE # 51
000F B40A04            CJNE    A,#0AH,?C0008
                                           ; SOURCE LINE # 52
                                           ; SOURCE LINE # 53
0012 1100        R     ACALL   new_line
                                           ; SOURCE LINE # 54
0014 8004              SJMP    ?C0007
0016         ?C0008:
                                           ; SOURCE LINE # 56
                                           ; SOURCE LINE # 57
0016 1100        R     ACALL   L?0019
0018 1100        R     ACALL   _write_char
                                           ; SOURCE LINE # 58
                                           ; SOURCE LINE # 59
001A         ?C0007:
001A 0500        R     INC     i
C51 COMPILER V9.56.0.0   LCD                                                               08/12/2017 01:24:57 PAGE 5   

001C 80ED              SJMP    ?C0005
                                           ; SOURCE LINE # 60
001E         ?C0010:
001E 22                RET     
             ; FUNCTION _write_string (END)

             ; FUNCTION new_line (BEGIN)
                                           ; SOURCE LINE # 63
                                           ; SOURCE LINE # 64
                                           ; SOURCE LINE # 65
0000 200006      E     JB      current_line,?C0011
                                           ; SOURCE LINE # 66
                                           ; SOURCE LINE # 67
0003 7FC0              MOV     R7,#0C0H
0005 1100        R     ACALL   _cmd
                                           ; SOURCE LINE # 69
0007 8004              SJMP    ?C0012
0009         ?C0011:
                                           ; SOURCE LINE # 71
                                           ; SOURCE LINE # 72
0009 7F80              MOV     R7,#080H
000B 1100        R     ACALL   _cmd
                                           ; SOURCE LINE # 73
000D         ?C0012:
                                           ; SOURCE LINE # 74
000D B200        E     CPL     current_line
                                           ; SOURCE LINE # 75
000F 22                RET     
             ; FUNCTION new_line (END)

             ; FUNCTION _int_to_ascii (BEGIN)
                                           ; SOURCE LINE # 77
;---- Variable 'integer' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 78
                                           ; SOURCE LINE # 80
0000 E4                CLR     A
0001 F500        R     MOV     i,A
0003         ?C0014:
0003 EF                MOV     A,R7
0004 6003              JZ      ?C0017
                                           ; SOURCE LINE # 82
0006 2430              ADD     A,#030H
0008 FF                MOV     R7,A
                                           ; SOURCE LINE # 83
0009         ?C0017:
0009 22                RET     
             ; FUNCTION _int_to_ascii (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    138    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
