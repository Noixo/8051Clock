C51 COMPILER V9.56.0.0   EEPROM                                                            10/29/2017 01:41:24 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN .\Objects\eeprom.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE eeprom.c OPTIMIZE(9,SIZE) BROWSE MODP2 DEBUG OBJECTEXTEND TABS(2) OBJECT
                    -(.\Objects\eeprom.obj)

line level    source

   1          #include "eeprom.h"
   2          #include "i2c.h"
   3          #include "timing.h"
   4          #include "serial.h"
   5          
   6          //Code for the AT24C32 
   7          
   8          //must have 10ms delay minimum after writing a byte
   9          void eepromWriteByte(unsigned char addr1, unsigned char addr2, unsigned char value)
  10          {
  11   1        i2c_start();
  12   1        i2c_device_id(at24, 0);
  13   1        i2c_write(addr1);
  14   1        i2c_write(addr2);
  15   1        
  16   1        //i2c_stop();
  17   1        
  18   1        i2c_write(value);
  19   1        i2c_stop();
  20   1      }
  21          /*
  22          void eepromWritePage(unsigned char* addr, unsigned char value)
  23          {
  24            unsigned char i;
  25            
  26            //for(i = 0; i < )
  27          }
  28          */
  29          
  30          /*
  31          char wearCheck()
  32          {
  33            unsigned char i, j, wear = 0;
  34            
  35            // fill each location in eeprom, alternating 0 and 1
  36            for(i = 0; i <  0xF; i++)
  37            {
  38              for(j = 0; j < 0xFF; j++)
  39              {
  40                eepromWriteByte(i, j, wear);
  41                wear ^= 1;
  42                
  43                serial_convert(i);
  44                serial_send(' ');
  45                //if(eepromReadByte() != wear)
  46                  //return -1;
  47                ms_delay(10);
  48              }
  49            }
  50            //check if value is not 1 or 0
  51            return 0;
  52          }
  53          */
  54          /*
C51 COMPILER V9.56.0.0   EEPROM                                                            10/29/2017 01:41:24 PAGE 2   

  55          void eepromClear()
  56          {
  57            unsigned char i, j;
  58            for(i = 0; i < 0x0F; i++)
  59            {
  60              for(j = 0; j < 0xFF; j++)
  61              {
  62                eepromWriteByte(i, j, 0xFF);
  63              }
  64            }
  65          }
  66          */
  67          /*
  68          
  69          MOVE TO ANOTHER C FILE
  70          void dumpRom()
  71          {
  72            unsigned char i, j;
  73            
  74            for(i = 0; i <= 0xF; i++)
  75              {
  76                for(j = 0; j < 0xFF; j++)
  77                {
  78                  serial_convert(eepromRandomRead(i,j));
  79                  serial_send(' ');
  80                }
  81                serial_send('\r');
  82                serial_send('\n');
  83              }
  84          }
  85          */
  86          
  87          unsigned char readByte()
  88          {
  89   1        unsigned char value;
  90   1        i2c_start();
  91   1        i2c_device_id(at24, 1);
  92   1        value = i2c_read(1);
  93   1        i2c_stop();
  94   1        
  95   1        //write_int(value);
  96   1        
  97   1        return value;
  98   1      }
  99          
 100          unsigned char eepromRandomRead(unsigned char addr1, unsigned char addr2)
 101          {
 102   1        unsigned char value;
 103   1        
 104   1        //dummy write
 105   1        i2c_start();
 106   1        i2c_device_id(at24,0);
 107   1        
 108   1        i2c_write(addr1);
 109   1        i2c_write(addr2);
 110   1        
 111   1        value = readByte();
 112   1        
 113   1        //i2c_stop();
 114   1        
 115   1        return value;
 116   1      }
C51 COMPILER V9.56.0.0   EEPROM                                                            10/29/2017 01:41:24 PAGE 3   

 117          /*
 118          unsigned char* eepromReadPage(unsigned char* addr)
 119          {
 120            return 0;
 121          }
 122          */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     95    ----
   CONSTANT SIZE    =      1    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
